[{"D:\\React Apps\\expense_tracker\\src\\index.js":"1","D:\\React Apps\\expense_tracker\\src\\App.js":"2","D:\\React Apps\\expense_tracker\\src\\components\\Details\\Details.jsx":"3","D:\\React Apps\\expense_tracker\\src\\components\\Details\\styles.js":"4","D:\\React Apps\\expense_tracker\\src\\styles.js":"5","D:\\React Apps\\expense_tracker\\src\\components\\Main\\Main.jsx":"6","D:\\React Apps\\expense_tracker\\src\\components\\Main\\styles.js":"7","D:\\React Apps\\expense_tracker\\src\\components\\Main\\Form\\Form.jsx":"8","D:\\React Apps\\expense_tracker\\src\\components\\Main\\Form\\styles.js":"9","D:\\React Apps\\expense_tracker\\src\\components\\Main\\List\\List.jsx":"10","D:\\React Apps\\expense_tracker\\src\\components\\Main\\List\\styles.js":"11","D:\\React Apps\\expense_tracker\\src\\context\\context.js":"12","D:\\React Apps\\expense_tracker\\src\\context\\contextReducer.js":"13","D:\\React Apps\\expense_tracker\\src\\constants\\categories.js":"14","D:\\React Apps\\expense_tracker\\src\\utilities\\formatDate.js":"15","D:\\React Apps\\expense_tracker\\src\\useTransaction.js":"16","D:\\React Apps\\expense_tracker\\src\\components\\SnackBar\\Snackbar.jsx":"17","D:\\React Apps\\expense_tracker\\src\\components\\SnackBar\\styles.js":"18","D:\\React Apps\\expense_tracker\\src\\components\\InfoCard.jsx":"19"},{"size":396,"mtime":1610877729810,"results":"20","hashOfConfig":"21"},{"size":1443,"mtime":1610892412868,"results":"22","hashOfConfig":"21"},{"size":740,"mtime":1610870192473,"results":"23","hashOfConfig":"21"},{"size":277,"mtime":1610890727505,"results":"24","hashOfConfig":"21"},{"size":580,"mtime":1610807978254,"results":"25","hashOfConfig":"21"},{"size":1364,"mtime":1610892592789,"results":"26","hashOfConfig":"21"},{"size":526,"mtime":1610889523032,"results":"27","hashOfConfig":"21"},{"size":5070,"mtime":1610891495301,"results":"28","hashOfConfig":"21"},{"size":245,"mtime":1610814734040,"results":"29","hashOfConfig":"21"},{"size":1664,"mtime":1610864461992,"results":"30","hashOfConfig":"21"},{"size":414,"mtime":1610822972070,"results":"31","hashOfConfig":"21"},{"size":1698,"mtime":1610890776749,"results":"32","hashOfConfig":"21"},{"size":867,"mtime":1610889641816,"results":"33","hashOfConfig":"21"},{"size":1725,"mtime":1610870940906,"results":"34","hashOfConfig":"21"},{"size":323,"mtime":1610865130830,"results":"35","hashOfConfig":"21"},{"size":1415,"mtime":1610892673211,"results":"36","hashOfConfig":"21"},{"size":815,"mtime":1610891350023,"results":"37","hashOfConfig":"21"},{"size":204,"mtime":1610891282350,"results":"38","hashOfConfig":"21"},{"size":465,"mtime":1610891709025,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1alvpk0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\React Apps\\expense_tracker\\src\\index.js",[],["81","82"],"D:\\React Apps\\expense_tracker\\src\\App.js",["83"],"D:\\React Apps\\expense_tracker\\src\\components\\Details\\Details.jsx",[],"D:\\React Apps\\expense_tracker\\src\\components\\Details\\styles.js",[],"D:\\React Apps\\expense_tracker\\src\\styles.js",[],"D:\\React Apps\\expense_tracker\\src\\components\\Main\\Main.jsx",[],"D:\\React Apps\\expense_tracker\\src\\components\\Main\\styles.js",[],"D:\\React Apps\\expense_tracker\\src\\components\\Main\\Form\\Form.jsx",["84"],"import React ,{useState,useEffect ,useContext} from 'react'\r\nimport {TextField , Typography , Grid, Button, FormControl ,InputLabel , Select, MenuItem} from '@material-ui/core'\r\nimport {ExpenseTrackerContext} from '../../../context/context'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport {useSpeechContext} from '@speechly/react-client'\r\n\r\nimport useStyles  from     './styles.js'\r\nimport {incomeCategories, expenseCategories}  from '../../../constants/categories';\r\nimport formatDate from '../../../utilities/formatDate'\r\nimport CustomizedSnackbar from '../../SnackBar/Snackbar'\r\n\r\nconst initialState ={\r\n    amount:'',\r\n    category:'',\r\n    type:'Income',\r\n    date:formatDate(new Date()),\r\n\r\n}\r\n\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [formData,setFormData] = useState(initialState)\r\n    const {addTransaction} = useContext(ExpenseTrackerContext);\r\n    const {segment} = useSpeechContext();\r\n    const [open,setOpen] = useState(false)\r\n\r\n    const createTransaction = () =>\r\n    {   if(Number.isNaN(Number(formData.amount))|| !formData.date.includes('-')) return;\r\n        \r\n        const transaction = {...formData,amount:Number(formData.amount) , id:uuidv4()}\r\n\r\n        setOpen(true);\r\n        addTransaction(transaction)\r\n        setFormData(initialState)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() =>{\r\n        if(segment)\r\n        {\r\n            if(segment.intent.intent === 'add_expense'){\r\n                setFormData({...formData,type:'Expense'}); \r\n            }\r\n            else if (segment.intent.intent === 'add_income') {\r\n                setFormData({ ...formData, type: 'Income' });\r\n              } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n                return createTransaction();\r\n              } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n                return setFormData(initialState);\r\n        }\r\n\r\n        segment.entities.forEach((e) => {\r\n                console.log(e.value)\r\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (e.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: e.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: e.value });\r\n            break;\r\n          default:\r\n            break;\r\n        } \r\n\r\n        });\r\n\r\n        \r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    \r\n    }\r\n\r\n\r\n}, [segment]);\r\n    \r\n    \r\n    const selectedCategories = formData.type ==='Income'? incomeCategories: expenseCategories;\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n            <Grid item xs={12}>\r\n            <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment && (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) }\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                        <Select value={formData.type} onChange={(e) => setFormData({...formData, type:e.target.value})}>\r\n                            <MenuItem value=\"Income\">Income</MenuItem>\r\n                            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                        </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select value={formData.category} onChange={(e) => setFormData({...formData,category:e.target.value})}>\r\n                        {selectedCategories.map((category) => <MenuItem key={category.type} value={category.type}>{category.type}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e) => setFormData({...formData, amount:e.target.value})} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField type=\"date\" label=\"Date\" fullWidth value={formData.date} onChange={(e) => setFormData({...formData, date:formatDate(e.target.value)})} />\r\n            </Grid>\r\n            <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n\r\n        </Grid>\r\n \r\n        )\r\n}\r\n\r\nexport default Form\r\n","D:\\React Apps\\expense_tracker\\src\\components\\Main\\Form\\styles.js",[],"D:\\React Apps\\expense_tracker\\src\\components\\Main\\List\\List.jsx",[],"D:\\React Apps\\expense_tracker\\src\\components\\Main\\List\\styles.js",[],"D:\\React Apps\\expense_tracker\\src\\context\\context.js",[],"D:\\React Apps\\expense_tracker\\src\\context\\contextReducer.js",[],"D:\\React Apps\\expense_tracker\\src\\constants\\categories.js",[],"D:\\React Apps\\expense_tracker\\src\\utilities\\formatDate.js",["85"],"export default (date) => {\r\n    const d = new Date(date);\r\n    let month = `${d.getMonth() + 1}`;\r\n    let day = `${d.getDate()}`;\r\n    const year = d.getFullYear();\r\n  \r\n    if (month.length < 2) { month = `0${month}`; }\r\n    if (day.length < 2) { day = `0${day}`; }\r\n  \r\n    return [year, month, day].join('-');\r\n  };\r\n  ","D:\\React Apps\\expense_tracker\\src\\useTransaction.js",[],"D:\\React Apps\\expense_tracker\\src\\components\\SnackBar\\Snackbar.jsx",[],"D:\\React Apps\\expense_tracker\\src\\components\\SnackBar\\styles.js",[],"D:\\React Apps\\expense_tracker\\src\\components\\InfoCard.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":53,"nodeType":"92","messageId":"93","endLine":6,"endColumn":63},{"ruleId":"94","severity":1,"message":"95","line":86,"column":4,"nodeType":"96","endLine":86,"endColumn":13,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","endLine":11,"endColumn":5},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'ErrorPanel' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["103"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"106","text":"107"},[2937,2946],"[createTransaction, formData, segment]"]